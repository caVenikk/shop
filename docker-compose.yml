version: '3.9'
services:
  api:
    build:
      context: ./shop-api/
    container_name: shop-api-container
    image: shop-api-image:0.1.0
    env_file:
      - .env
    environment:
      DB_HOST: "postgresql"
    networks:
      - shop
    ports:
      - "8080:8000"
    depends_on:
      - postgresql
    command: >
      sh -c "alembic upgrade head && uvicorn src.api.app:app --port 8000 --host 0.0.0.0"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
    restart: unless-stopped
    
  webapp:
    container_name: shop-webapp-container
    build:
      context: ./shop-webapp/
    command: >
      sh -c "npx vite build"
    volumes:
      - ./shop-webapp/dist/:/app/dist:rw
    env_file:
      - .env
    networks:
      - shop

  bot:
    container_name: shop-bot-container
    image: shop-bot-image:0.1.0
    build:
      context: ./shop-bot/
    command: >
      sh -c "python -m bot"
    env_file:
      - .env
    networks:
      - shop
    depends_on:
      - postgresql
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
    restart: unless-stopped
  
  postgresql:
    image: postgres:15.1
    container_name: shop-database-container
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    command:
      - "postgres"
      - "-c"
      - "max_connections=30"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "work_mem=64MB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "max_prepared_transactions=30"
      - "-c"
      - "random_page_cost=1.7"
      - "-c"
      - "temp_file_limit=1GB"
      - "-c"
      - "log_min_error_statement=INFO"
      - "-c"
      - "log_min_messages=FATAL"
      - "-c"
      - "log_statement=none"
      - "-c"
      - "log_destination=stderr"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 7s
    restart: always
    volumes:
      - postgresql-data-volume:/var/lib/postgresql/data
    networks:
      - shop
  
networks:
  shop:
    name: ${CONTAINER_NETWORK}
    driver: bridge
volumes:
  postgresql-data-volume:
